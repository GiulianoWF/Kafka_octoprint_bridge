version: '2.1'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./Runtime/zk-single-kafka-single/zoo1/data:/data
      - ./Runtime/zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.4.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./Runtime/zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  IoT_server:
    image: ubuntu:focal
    command: bash -c "
           apt update   
        && apt install git -y
        && apt install python3 -y
        && apt install python3-pip -y
        && pip3 install requests
        && pip3 install pymongo
        && pip3 install kafka-python
        && cd /home
        && git clone https://github.com/GiulianoWF/Kafka_octoprint_bridge.git
        && cd Kafka_octoprint_bridge/
        && python3 IoT_agent.py
        && bash
      "
    stdin_open: true
    tty: true

  Gcode_server:
    image: ubuntu:focal
    command: bash -c "
           apt update   
        && apt install git -y
        && apt install build-essential -y
        && cd /home
        && git clone https://github.com/GiulianoWF/Kafka_octoprint_bridge.git
        && cd Kafka_octoprint_bridge/Gcode_server
        && g++ -Iincludes -Llibs Gcode_server.cpp -lpistache -lpthread -std=c++17
        && ./a.out
        && bash
      "
    stdin_open: true
    tty: true

  octoprint1:
    image: octoprint/octoprint
    ports:
      - 5001:5000
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
#    volumes:
#     - octoprint:/home/octoprint

